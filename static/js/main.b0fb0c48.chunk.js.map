{"version":3,"sources":["Constants/Routes.js","Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Components/Session/context.js","Components/Session/withAuthentication.js","Components/Session/withAuthorization.js","Components/Navbar.js","Components/SignUpForm.js","Components/LogInForm.js","Components/Game.js","Components/CategoryItem.js","Components/CategoryList.js","Components/PortalQuestionsItem.js","Components/PortalQuestionsList.js","Components/PortalUsers.js","App.js","serviceWorker.js","index.js"],"names":["HOME","SIGN_UP","LOG_IN","QUESTIONS","GAME","PORTAL_USERS","FirebaseContext","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","user","uid","db","ref","users","app","initializeApp","this","firestore","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","React","withAuthorization","condition","WithAuthorization","history","push","ROUTES","withRouter","className","to","type","onClick","useState","name","setName","setEmail","setPassword","error","setError","onSubmit","e","preventDefault","then","collection","add","highScore","catch","placeholder","onChange","event","target","message","currCtg","useParams","category","questions","ctgList","filter","ctg","toLowerCase","time","setTime","score","setScore","currQues","setCurrQues","useEffect","myTimer","setInterval","old","clearInterval","currentUser","updateUserData","get","querySnapshot","newList","forEach","doc","key","id","data","item","updateDocument","console","log","documentId","update","handleClick","correctAns","oldScore","changeQuestion","length","answersList","answers","map","ans","idx","ques","isEditing","setIsEditing","docId","nameInput","onBlur","onKeyDown","keyCode","autoFocus","delete","allCategories","addCtg","answer","questionsList","setUsers","usersList","class","allData","setAllData","oldData","exact","path","render","routeProps","component","SignUpForm","LogInForm","Users","CategoryList","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0fb0c48.chunk.js","sourcesContent":["//FOR USER\r\nexport const HOME = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const LOG_IN = \"/login\";\r\nexport const QUESTIONS = \"/:category\";\r\nexport const GAME = \"/:category/game\";\r\n\r\n//FOR DESIGNER\r\nexport const PORTAL_HOME = \"/portal/\";\r\nexport const PORTAL_USERS = \"/users\";\r\nexport const PORTAL_QUESTION = \"/portal/questions\";\r\n","import React, { createContext } from \"react\";\r\n\r\nconst FirebaseContext = createContext(null);\r\n\r\nexport const withFirebase = (Component) => (props) => (\r\n\t<FirebaseContext.Consumer>\r\n\t\t{(firebase) => <Component {...props} firebase={firebase} />}\r\n\t</FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nclass Firebase {\r\n\tconstructor () {\r\n\t\tapp.initializeApp(config);\r\n\t\tthis.auth = app.auth();\r\n\t\tthis.db = app.firestore();\r\n\t}\r\n\r\n\tdoCreateUserWithEmailAndPassword = (email, password) =>\r\n\t\tthis.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n\tdoSignInWithEmailAndPassword = (email, password) =>\r\n\t\tthis.auth.signInWithEmailAndPassword(email, password);\r\n\r\n\tdoSignOut = () => this.auth.signOut();\r\n\r\n\tuser = (uid) => this.db.ref(`users/${uid}`);\r\n\tusers = () => this.db.ref(\"users\");\r\n}\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./firebase\";\r\n\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import { createContext } from \"react\";\r\nconst AuthUserContext = createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = (Component) => {\r\n\tclass WithAuthentication extends React.Component {\r\n\t\tconstructor (props) {\r\n\t\t\tsuper(props);\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\tauthUser: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcomponentDidMount () {\r\n\t\t\tthis.listener = this.props.firebase.auth.onAuthStateChanged(\r\n\t\t\t\t(authUser) => {\r\n\t\t\t\t\tauthUser\r\n\t\t\t\t\t\t? this.setState({ authUser })\r\n\t\t\t\t\t\t: this.setState({ authUser: null });\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcomponentWillUnmount () {\r\n\t\t\tthis.listener();\r\n\t\t}\r\n\r\n\t\trender () {\r\n\t\t\treturn (\r\n\t\t\t\t<AuthUserContext.Provider value={this.state.authUser}>\r\n\t\t\t\t\t<Component {...this.props} />\r\n\t\t\t\t</AuthUserContext.Provider>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../Constants/Routes\";\r\n\r\nconst withAuthorization = (condition) => (Component) => {\r\n\tclass WithAuthorization extends React.Component {\r\n\t\tcomponentDidMount () {\r\n\t\t\tthis.listener = this.props.firebase.auth.onAuthStateChanged(\r\n\t\t\t\t(authUser) => {\r\n\t\t\t\t\tif (!condition(authUser)) {\r\n\t\t\t\t\t\tthis.props.history.push(ROUTES.LOG_IN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcomponentWillUnmount () {\r\n\t\t\tthis.listener();\r\n\t\t}\r\n\r\n\t\trender () {\r\n\t\t\treturn (\r\n\t\t\t\t<AuthUserContext.Consumer>\r\n\t\t\t\t\t{(authUser) =>\r\n\t\t\t\t\t\tcondition(authUser) ? <Component {...this.props} /> : null}\r\n\t\t\t\t</AuthUserContext.Consumer>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn withRouter(withFirebase(WithAuthorization));\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as ROUTES from \"../Constants/Routes\";\r\nimport { withFirebase } from \"./Firebase\";\r\nimport { AuthUserContext } from \"./Session\";\r\nimport \"./Styles/Navbar.css\";\r\n\r\nfunction Navbar (props) {\r\n\treturn (\r\n\t\t<nav className=\"navbar\">\r\n\t\t\t<ul className=\"navbar-list\">\r\n\t\t\t\t<li className=\"navbar-item logo\">\r\n\t\t\t\t\t<Link to={ROUTES.HOME} className=\"navbar-link\">\r\n\t\t\t\t\t\tQUIZ UP\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<AuthUserContext.Consumer>\r\n\t\t\t\t\t{(authUser) =>\r\n\t\t\t\t\t\tauthUser && (\r\n\t\t\t\t\t\t\t<li className=\"navbar-item\">\r\n\t\t\t\t\t\t\t\t<button type=\"button\" onClick={props.firebase.doSignOut}>\r\n\t\t\t\t\t\t\t\t\tLog Out\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</AuthUserContext.Consumer>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default withFirebase(Navbar);\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\nimport * as ROUTES from \"../Constants/Routes\";\r\nimport \"./Styles/Form.css\";\r\n\r\nfunction SignUpForm (props) {\r\n\tconst [ name, setName ] = useState(\"\");\r\n\tconst [ email, setEmail ] = useState(\"\");\r\n\tconst [ password, setPassword ] = useState(\"\");\r\n\tconst [ error, setError ] = useState(null);\r\n\r\n\tfunction addUser () {\r\n\t\tprops.firebase.db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.add({\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\thighScore: 0\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetName(\"\");\r\n\t\t\t\tsetEmail(\"\");\r\n\t\t\t\tsetPassword(\"\");\r\n\t\t\t\tprops.history.push(ROUTES.HOME);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetError(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction submitForm (e) {\r\n\t\te.preventDefault();\r\n\t\tprops.firebase\r\n\t\t\t.doCreateUserWithEmailAndPassword(email, password)\r\n\t\t\t.then(addUser())\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetError(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-wrapper\">\r\n\t\t\t<h1 className=\"form-heading\">Sign Up</h1>\r\n\t\t\t<form onSubmit={submitForm} className=\"form login\">\r\n\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t<i className=\"fas fa-user\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t<i className=\"fas fa-envelope\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => setEmail(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t<i className=\"fas fa-key\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"form-btn\" type=\"submit\">\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</button>\r\n\t\t\t\t{error && <p className=\"form-error\">{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t\t<h4>Already have and account? Log In:</h4>\r\n\t\t\t<Link to={ROUTES.LOG_IN}>Log In</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(withFirebase(SignUpForm));\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\nimport * as ROUTES from \"../Constants/Routes\";\r\nimport \"./Styles/Form.css\";\r\n\r\nfunction LogInForm (props) {\r\n\tconst [ email, setEmail ] = useState(\"\");\r\n\tconst [ password, setPassword ] = useState(\"\");\r\n\tconst [ error, setError ] = useState(null);\r\n\r\n\tfunction submitForm (e) {\r\n\t\tprops.firebase\r\n\t\t\t.doSignInWithEmailAndPassword(email, password)\r\n\t\t\t.then((authUser) => {\r\n\t\t\t\tsetEmail(\"\");\r\n\t\t\t\tsetPassword(\"\");\r\n\t\t\t\tprops.history.push(ROUTES.HOME);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetError(error);\r\n\t\t\t});\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-wrapper\">\r\n\t\t\t<h1 className=\"form-heading\">Log In</h1>\r\n\t\t\t<form onSubmit={submitForm} className=\"form login\">\r\n\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t<i className=\"fas fa-envelope\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(event) => setEmail(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t<i className=\"fas fa-key\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"form-btn\" type=\"submit\">\r\n\t\t\t\t\tLog In\r\n\t\t\t\t</button>\r\n\t\t\t\t{error && <p className=\"form-error\">{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t\t<h4>Don't have an account? Sign Up:</h4>\r\n\t\t\t<Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(withFirebase(LogInForm));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { withAuthorization } from \"./Session\";\r\nimport * as ROUTES from \"../Constants/Routes\";\r\nimport \"./Styles/Game.css\";\r\n\r\nfunction Game (props) {\r\n\tconst currCtg = useParams().category;\r\n\tconst questions = props.ctgList.filter(\r\n\t\t(ctg) => ctg.name.toLowerCase() === currCtg.toLowerCase()\r\n\t)[0].questions;\r\n\r\n\tconst [ time, setTime ] = useState(60);\r\n\tconst [ score, setScore ] = useState(0);\r\n\tconst [ currQues, setCurrQues ] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tvar myTimer = setInterval(() => {\r\n\t\t\tsetTime((old) => old - 1);\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => clearInterval(myTimer);\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (time <= -3) props.history.push(ROUTES.HOME);\r\n\t\t\telse if (time <= 0) {\r\n\t\t\t\tvar user = props.firebase.auth.currentUser;\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tupdateUserData(user);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ time ]\r\n\t);\r\n\r\n\tconst updateUserData = (user) => {\r\n\t\tprops.firebase.db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.get()\r\n\t\t\t.then(function (querySnapshot) {\r\n\t\t\t\tvar newList = [];\r\n\t\t\t\tquerySnapshot.forEach(function (doc) {\r\n\t\t\t\t\tnewList.push({ key: doc.id, ...doc.data() });\r\n\t\t\t\t});\r\n\t\t\t\tnewList = newList.filter((item) => item.email === user.email);\r\n\t\t\t\tif (newList[0].highScore < score) updateDocument(newList[0].key);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst updateDocument = (documentId) => {\r\n\t\tprops.firebase.db.collection(\"users\").doc(documentId).update({\r\n\t\t\thighScore: score\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tif (e.target.name === questions[currQues].correctAns) {\r\n\t\t\tsetScore((oldScore) => oldScore + 10);\r\n\t\t}\r\n\t\tchangeQuestion();\r\n\t};\r\n\r\n\tconst changeQuestion = () => {\r\n\t\tif (currQues === questions.length - 1) setCurrQues(0);\r\n\t\telse setCurrQues((old) => old + 1);\r\n\t};\r\n\r\n\tconst answersList = questions[currQues].answers.map((ans, idx) => (\r\n\t\t<button onClick={handleClick} key={idx} name={idx} className=\"answer\">\r\n\t\t\t{ans}\r\n\t\t</button>\r\n\t));\r\n\r\n\treturn time > 0 ? (\r\n\t\t<div className=\"game-container\">\r\n\t\t\t<div className=\"info-container\">\r\n\t\t\t\t<h2 className=\"time\">Remaining Time: {time}s</h2>\r\n\t\t\t\t<h2 className=\"score\">Score: {score}</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"question\">{questions[currQues].ques}</div>\r\n\t\t\t<div className=\"answer-container\">{answersList}</div>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"game-container\">\r\n\t\t\t<h2 className=\"score\">Score: {score}</h2>\r\n\t\t\t<div className=\"question\">GAME OVER!</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst condition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(condition)(Game);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\nimport \"./Styles/Category.css\";\r\n\r\nfunction CategoryItem (props) {\r\n\tconst [ name, setName ] = useState(props.name);\r\n\tconst [ isEditing, setIsEditing ] = useState(props.name === \"\");\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (name !== props.name)\r\n\t\t\t\tprops.firebase.db.collection(\"categories\").doc(props.docId).update({\r\n\t\t\t\t\tname\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[ name ]\r\n\t);\r\n\r\n\tconst deleteItem = () => {\r\n\t\tprops.firebase.db.collection(\"categories\").doc(props.docId).delete();\r\n\t};\r\n\r\n\tconst nameInput = isEditing ? (\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tclassName=\"name-input\"\r\n\t\t\tvalue={name}\r\n\t\t\tonChange={(event) => setName(event.target.value)}\r\n\t\t\tonBlur={() => setIsEditing(false)}\r\n\t\t\tonKeyDown={(event) => {\r\n\t\t\t\tif (event.keyCode === 13) setIsEditing(false);\r\n\t\t\t}}\r\n\t\t\tautoFocus\r\n\t\t/>\r\n\t) : (\r\n\t\t<h2 className=\"name\">{name}</h2>\r\n\t);\r\n\treturn (\r\n\t\t<li className=\"category-item\">\r\n\t\t\t<Link className=\"category-link\" to={`/${props.name.toLowerCase()}`}>\r\n\t\t\t\t{nameInput}\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"actions\">\r\n\t\t\t\t<button className=\"edit\" onClick={() => setIsEditing(true)}>\r\n\t\t\t\t\t<i className=\"fas fa-pen\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"delete\" onClick={deleteItem}>\r\n\t\t\t\t\t<i className=\"fas fa-trash-alt\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default withFirebase(CategoryItem);\r\n","import React from \"react\";\r\n\r\nimport CategoryItem from \"./CategoryItem\";\r\nimport { withAuthorization } from \"./Session\";\r\nimport \"./Styles/Category.css\";\r\n\r\nfunction CategoryList (props) {\r\n\tconst allCategories = props.ctgList.map((item) => (\r\n\t\t<CategoryItem key={item.key} docId={item.key} name={item.name} />\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className=\"category-wrapper\">\r\n\t\t\t<h1 className=\"category-heading\">Categories</h1>\r\n\t\t\t<ul className=\"category-list\">{allCategories}</ul>\r\n\t\t\t<button onClick={props.addCtg} className=\"category-addnew\">\r\n\t\t\t\tAdd New\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst condition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(condition)(CategoryList);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\nimport \"./Styles/Questions.css\";\r\n\r\nfunction QuestionsItem (props) {\r\n\tconst [ ques, setQues ] = useState(props.ques);\r\n\tconst [ answers, setAnswers ] = useState(props.answers);\r\n\r\n\treturn (\r\n\t\t<div className=\"question-wrapper\">\r\n\t\t\t{/* <div className=\"question-actions\">\r\n\t\t\t\t<button className=\"question-edit\" onClick={() => setIsEditing(true)}>\r\n\t\t\t\t\t<i className=\"fas fa-pen\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"question-delete\">\r\n\t\t\t\t\t<i className=\"fas fa-trash-alt\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div> */}\r\n\t\t\t<h2 className=\"question\">{ques}</h2>\r\n\t\t\t<ul className=\"answers-list\">\r\n\t\t\t\t{answers.map((answer, idx) => (\r\n\t\t\t\t\t<li key={idx} className=\"answers-item\">\r\n\t\t\t\t\t\t{/* <Link className=\"answers-link\">{answer}</Link> */}\r\n\t\t\t\t\t\t<div className=\"answers-link\">{answer}</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withFirebase(QuestionsItem);\r\n","import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport QuestionsItem from \"./PortalQuestionsItem\";\r\nimport { withAuthorization } from \"./Session\";\r\nimport \"./Styles/Questions.css\";\r\n\r\nfunction QuestionsList (props) {\r\n\tconst currCtg = useParams().category;\r\n\tconst questions = props.ctgList.filter(\r\n\t\t(ctg) => ctg.name.toLowerCase() === currCtg.toLowerCase()\r\n\t)[0].questions;\r\n\t// console.log(questions);\r\n\r\n\tconst questionsList = questions.map((ques, idx) => (\r\n\t\t// <div key={idx} className=\"question-wrapper\">\r\n\t\t// \t<h1 className=\"question\">{ques.ques}</h1>\r\n\t\t// \t<ul className=\"answers-list\">\r\n\t\t// \t\t{ques.answers.map((answer, idx) => (\r\n\t\t// \t\t\t<li key={idx} className=\"answers-item\">\r\n\t\t// \t\t\t\t<Link className=\"answers-link\">{answer}</Link>\r\n\t\t// \t\t\t</li>\r\n\t\t// \t\t))}\r\n\t\t// \t</ul>\r\n\t\t// </div>\r\n\t\t<QuestionsItem key={idx} ques={ques.ques} answers={ques.answers} />\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className=\"questions-list\">\r\n\t\t\t<h2 className=\"questions-heading\">Questions Stored in {currCtg}</h2>\r\n\t\t\t<Link to={`/${currCtg.toLowerCase()}/game`} className=\"play-game\">\r\n\t\t\t\tClick to Play Game for this Category\r\n\t\t\t</Link>\r\n\t\t\t{/* <button className=\"questions-addnew\">Add New Question</button> */}\r\n\t\t\t{questionsList}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst condition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(condition)(QuestionsList);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { withAuthorization } from \"./Session\";\r\nimport \"./Styles/Users.css\";\r\n\r\nfunction PortalUsers (props) {\r\n\tconst [ users, setUsers ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.firebase.db\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.get()\r\n\t\t\t.then(function (querySnapshot) {\r\n\t\t\t\tvar newList = [];\r\n\t\t\t\tquerySnapshot.forEach(function (doc) {\r\n\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\tnewList.push({ key: doc.id, ...doc.data() });\r\n\t\t\t\t});\r\n\t\t\t\tsetUsers(newList);\r\n\t\t\t\t// console.log(newList);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconsole.log(users);\r\n\tconst usersList = users.map((user) => (\r\n\t\t<li className=\"user-item\">\r\n\t\t\t<h3>Name: {user.name}</h3>\r\n\t\t\t<h3>Email: {user.email}</h3>\r\n\t\t\t<h3>High Score: {user.highScore}</h3>\r\n\t\t</li>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className=\"users-container\">\r\n\t\t\t<h1 class=\"users-heading\">Users</h1>\r\n\t\t\t{!!users && users.length !== 0 ? (\r\n\t\t\t\t<ul className=\"users-list\">{usersList}</ul>\r\n\t\t\t) : (\r\n\t\t\t\t\"LOADING...\"\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst condition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(condition)(PortalUsers);\r\n","import React, { useEffect, useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./Components/Navbar\";\nimport SignUpForm from \"./Components/SignUpForm\";\nimport LogInForm from \"./Components/LogInForm\";\nimport Game from \"./Components/Game\";\nimport CategoryList from \"./Components/CategoryList\";\nimport QuestionsList from \"./Components/PortalQuestionsList\";\nimport Users from \"./Components/PortalUsers\";\nimport * as ROUTES from \"./Constants/Routes\";\nimport { withAuthentication } from \"./Components/Session\";\nimport \"./App.css\";\n\nfunction App (props) {\n\tconst [ allData, setAllData ] = useState(null);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tprops.firebase.db\n\t\t\t\t.collection(\"categories\")\n\t\t\t\t.get()\n\t\t\t\t.then(function (querySnapshot) {\n\t\t\t\t\tvar newList = [];\n\t\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\n\t\t\t\t\t\tnewList.push({ key: doc.id, ...doc.data() });\n\t\t\t\t\t});\n\t\t\t\t\tsetAllData(newList);\n\t\t\t\t\t// console.log(newList);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t\t});\n\t\t},\n\t\t[ allData ]\n\t);\n\n\tconst addCtg = () => {\n\t\tprops.firebase.db.collection(\"categories\").add({\n\t\t\tname: \"\",\n\t\t\tquestions: []\n\t\t});\n\t\tsetAllData((oldData) => [ ...oldData, { name: \"\" } ]);\n\t};\n\n\treturn (\n\t\t!!allData && (\n\t\t\t<HashRouter>\n\t\t\t\t<Navbar />\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath={ROUTES.HOME}\n\t\t\t\t\t\t\trender={(routeProps) => (\n\t\t\t\t\t\t\t\t<CategoryList\n\t\t\t\t\t\t\t\t\tctgList={allData}\n\t\t\t\t\t\t\t\t\taddCtg={addCtg}\n\t\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route exact path={ROUTES.SIGN_UP} component={SignUpForm} />\n\t\t\t\t\t\t<Route exact path={ROUTES.LOG_IN} component={LogInForm} />\n\t\t\t\t\t\t<Route exact path={ROUTES.PORTAL_USERS} component={Users} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath={ROUTES.QUESTIONS}\n\t\t\t\t\t\t\trender={(routeProps) => (\n\t\t\t\t\t\t\t\t<QuestionsList ctgList={allData} {...routeProps} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath={ROUTES.GAME}\n\t\t\t\t\t\t\trender={(routeProps) => (\n\t\t\t\t\t\t\t\t<Game ctgList={allData} {...routeProps} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path={ROUTES.HOME} component={CategoryList} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</HashRouter>\n\t\t)\n\t);\n}\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Firebase, { FirebaseContext } from \"./Components/Firebase\";\n\nReactDOM.render(\n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}